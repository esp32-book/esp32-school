
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 5       // RC522 SDA pin
#define RST_PIN 27     // RC522 RST pin
#define LED_PIN 2      // LED connected to GPIO 2

MFRC522 rfid(SS_PIN, RST_PIN);  // Create MFRC522 instance

شماره کارتی که در مرحله قبل خوانده بودیم //
byte allowedUID[4] = {0x62, 0xFE, 0x17, 0x51};  // Authorized card UID

void setup() {
  Serial.begin(115200);
  SPI.begin();
  rfid.PCD_Init();

  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  Serial.println("Waiting for a card...");
}

void loop() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
    return;
  }

  // Print UID
  Serial.print("Card UID: ");
  for (byte i = 0; i < rfid.uid.size; i++) {
    Serial.print(rfid.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(rfid.uid.uidByte[i], HEX);
  }
  Serial.println();

  // Check if the UID matches
  bool isMatch = true;
  for (byte i = 0; i < 4; i++) {
    if (rfid.uid.uidByte[i] != allowedUID[i]) {
      isMatch = false;
      break;
    }
  }

  if (isMatch) {
    Serial.println("✅ Access granted. Welcome!");
    digitalWrite(LED_PIN, HIGH);  // Turn on LED (unlock)
    delay(3000);                  // Keep unlocked for 3 seconds
    digitalWrite(LED_PIN, LOW);   // Lock again
  } else {
    Serial.println("⛔ Access denied.");
    digitalWrite(LED_PIN, LOW);
  }

  // Halt PICC communication
  rfid.PICC_HaltA();
  rfid.PCD_StopCrypto1();
}

