#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 5
#define RST_PIN 16

MFRC522 mfrc522(SS_PIN, RST_PIN);
MFRC522::MIFARE_Key key;

void setup() {
  Serial.begin(115200);
  SPI.begin();
  mfrc522.PCD_Init(); // پیکربندی اولیه ماژول RFID

  // مقداردهی اولیه کلید (کلید پیش‌فرض همه 0xFF)
  for (byte i = 0; i < 6; i++) key.keyByte[i] = 0xFF;

  Serial.println(F("منتظر کارت..."));
}

void loop() {
  // بررسی حضور کارت جدید
  if (!mfrc522.PICC_IsNewCardPresent()) return;
  if (!mfrc522.PICC_ReadCardSerial()) return;

  // نمایش UID کارت
  Serial.print("UID: ");
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    Serial.print(" ");
  }
  Serial.println();

  byte block = 4;
  byte buffer[18];
  byte len = 18;

  // احراز هویت کارت برای دسترسی به بلوک 4
  MFRC522::StatusCode status;
  status = mfrc522.PCD_Authenticate(MFRC522::PICC_CMD_MF_AUTH_KEY_A, block, &key, &(mfrc522.uid));
  if (status != MFRC522::STATUS_OK) {
    Serial.print(F("خطای احراز هویت: "));
    Serial.println(mfrc522.GetStatusCodeName(status));
    return;
  }

  // خواندن داده از بلوک 4
  status = mfrc522.MIFARE_Read(block, buffer, &len);
  if (status != MFRC522::STATUS_OK) {
    Serial.print(F("خواندن ناموفق: "));
    Serial.println(mfrc522.GetStatusCodeName(status));
    return;
  }

  Serial.println(F("خواندن موفق: "));
  for (byte i = 0; i < 16; i++) {
    Serial.print(buffer[i]);
    Serial.print(" ");
  }
  Serial.println();

  // پایان ارتباط با کارت
  mfrc522.PICC_HaltA();
  mfrc522.PCD_StopCrypto1();
}
